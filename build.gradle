plugins {
    id 'fabric-loom' version '0.12-SNAPSHOT'
    id 'com.modrinth.minotaur' version '2.+'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = "${project.mod_version}+${project.minecraft_version}"
group = project.maven_group

repositories {
    mavenCentral()

    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric api
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"

    // Snakeyaml for configs
    implementation include ("org.yaml:snakeyaml:${project.snakeyaml_version}")
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"

    // Minecraft 1.18 upwards uses Java 17
    it.options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

tasks.modrinth.dependsOn(tasks.modrinthSyncBody)
modrinth {
    token         = System.getenv('MODRINTH_TOKEN')
    projectId     = 'C62KCffR'
    versionNumber = project.version
    versionName   = project.version
    uploadFile    = remapJar
    versionType   = project.mod_version_type
    changelog     = rootProject.file('CHANGELOG.md').text
    syncBodyFrom  = rootProject.file('README.md').text
    gameVersions  = [
            "1.19"
    ]
    dependencies {
        required.project 'P7dR8mSH'
    }
}
